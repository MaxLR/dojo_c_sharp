// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VacationPlanner.Models;

#nullable disable

namespace VacationPlanner.Migrations
{
    [DbContext(typeof(VacationsContext))]
    [Migration("20220621223201_RecreatingDatabase")]
    partial class RecreatingDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VacationPlanner.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VacationPlanner.Models.UserVacationSignup", b =>
                {
                    b.Property<int>("UserVacationSignupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VacationId")
                        .HasColumnType("int");

                    b.HasKey("UserVacationSignupId");

                    b.HasIndex("UserId");

                    b.HasIndex("VacationId");

                    b.ToTable("UserVacationSignups");
                });

            modelBuilder.Entity("VacationPlanner.Models.Vacation", b =>
                {
                    b.Property<int>("VacationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("VacationId");

                    b.HasIndex("UserId");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("VacationPlanner.Models.UserVacationSignup", b =>
                {
                    b.HasOne("VacationPlanner.Models.User", "Vacationer")
                        .WithMany("JoinedVacations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacationPlanner.Models.Vacation", "Vacation")
                        .WithMany("JoinedVisitors")
                        .HasForeignKey("VacationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacation");

                    b.Navigation("Vacationer");
                });

            modelBuilder.Entity("VacationPlanner.Models.Vacation", b =>
                {
                    b.HasOne("VacationPlanner.Models.User", "Planner")
                        .WithMany("PlannedVacations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planner");
                });

            modelBuilder.Entity("VacationPlanner.Models.User", b =>
                {
                    b.Navigation("JoinedVacations");

                    b.Navigation("PlannedVacations");
                });

            modelBuilder.Entity("VacationPlanner.Models.Vacation", b =>
                {
                    b.Navigation("JoinedVisitors");
                });
#pragma warning restore 612, 618
        }
    }
}
